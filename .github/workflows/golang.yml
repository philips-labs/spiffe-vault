name: Go CI

on:
  push:
  pull_request:
    types: [ opened, reopened ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04

    name: Continuous Integration

    steps:
      - name: Set up Go
        uses: actions/setup-go@v2.1.4
        with:
          go-version: 1.17

      - name: Check out code
        uses: actions/checkout@v2.4.0

      - name: Cache Go modules
        uses: actions/cache@v2.1.7
        id: go-mod-cache
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Get dependencies
        run: go mod download

      - name: Lint
        run: |
          result=$(make lint)
          echo $result
          [ -n "$(echo "$result" | grep 'diff -u')" ] && exit 1 || exit 0

      - name: Build
        run: make build

      - name: Test
        run: make test

      - name: Coverage
        run: make coverage-out

      - name: Upload Code Coverage
        uses: codecov/codecov-action@v2.1.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
          verbose: true

  release:
    name: release
    needs: [build]
    runs-on: ubuntu-20.04

    steps:
      - name: Set up Go
        uses: actions/setup-go@v2.1.3
        with:
          go-version: 1.17

      - name: Checkout
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0

      - name: Login to container registries
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login -u ${{ github.actor }} --password-stdin ghcr.io

      - name: Set release variables
        id: release-vars
        run: |
          make release-vars > /tmp/spiffe-vault-release-vars.env
          source /tmp/spiffe-vault-release-vars.env
          if [[ -n "$LDFLAGS" ]]; then
            echo "::set-output name=LDFLAGS::$LDFLAGS"
          fi
          if [[ -n "$GIT_HASH" ]]; then
            echo "::set-output name=GIT_HASH::$GIT_HASH"
          fi
          rm -f /tmp/spiffe-vault-release-vars.env

      - name: Release ${{ (!startsWith(github.ref, 'refs/tags/') && 'snapshot') || '' }}
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist ${{ (!startsWith(github.ref, 'refs/tags/') && '--snapshot') || '' }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          LDFLAGS: ${{ steps.release-vars.outputs.LDFLAGS }}
          GIT_HASH: ${{ steps.release-vars.outputs.GIT_HASH }}

      - name: Logout from container registries
        if: ${{ always() }}
        run: |
          docker logout
          docker logout ghcr.io

  provenance:
    name: Generate provenance
    runs-on: ubuntu-20.04
    needs: [release]
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Generate provenance for release
        uses: philips-labs/slsa-provenance-action@v0.4.0
        with:
          artifact_path: release-assets
          output_path: 'build.provenance'
          tag_name: "${{ github.ref_name }}"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

